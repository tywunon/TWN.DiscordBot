when:
  - event: push
    branch: main

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands: 
      - touch ./TWN.DiscordBot.ControlPanel/appsettings.json
      - touch ./TWN.DiscordBot.Bot/appsettings.json
      - dotnet restore
      - dotnet build -c Release

  # - name: test
  #   image: mcr.microsoft.com/dotnet/sdk:9.0
  #   commands:
  #   - dotnet test --no-build -c Release

  - name: publish-bot
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - dotnet publish ./TWN.DiscordBot.Bot -o ./TWN.DiscordBot.Bot/publish

  - name: publish-control-panel
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - dotnet publish ./TWN.DiscordBot.ControlPanel -o ./TWN.DiscordBot.ControlPanel/publish

  # - name: deploy
  #   image: bash
  #   environment:
  #     DEPLOY_DEST:
  #       from_secret: deploy_destination
  #     SSH_KEY:
  #       from_secret: ssh_key
  #     SSH_KNOWN_HOSTS:
  #       from_secret: ssh_known_hosts
  #   commands:
  #     - apk update
  #     - apk add rsync
  #     - apk add openssh
  #     - mkdir ~/.ssh/
  #     - echo "My dest.. ${DEPLOY_DEST}"
  #     - echo "${SSH_KEY}" > ~/.ssh/id_rsa
  #     - echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
  #     - chmod 600 ~/.ssh/id_rsa
  #     - rsync -rv publish/* ${DEPLOY_DEST}

  # - name: discord notification
  #   image: appleboy/drone-discord
  #   settings:
  #     webhook_id: 
  #       from_secret: discord_webhook_id
  #     webhook_token: 
  #       from_secret: discord_webhook_token
  #     message: "done"

  - name: check-publish
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - ls -la ./TWN.DiscordBot.Bot/publish
      - ls -la ./TWN.DiscordBot.ControlPanel/publish